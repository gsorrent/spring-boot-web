name: Java CI with Maven - Gsorrentino
on:
  push:
    branches: [ "master" ]
    paths:
      -  'src/**'
      - '.github/workflows/maven.yaml'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Set up the Maven dependencies caching
      uses: actions/cache@v3.3.2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Install Maven dependencies
      run: mvn install

    - name: Run tests
      run: mvn --batch-mode --update-snapshots verify
      
  docker-build:
  
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Dashboard to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}      

  build-docker-image:
   name: Publish to Docker Hub
   runs-on: ubuntu-latest
   

   steps:
     - uses: actions/checkout@v2
     - uses: docker/login-action@v2
       with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}      
     - name: Build Container image
       run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
     - name: Publish Docker image
       run: docker push ${{ secrets.DOCKER_REPO }}
